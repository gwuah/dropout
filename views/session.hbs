<!DOCTYPE html  >
<html lang="en">

<head>
    <title>Dropout</title>
    <link rel="stylesheet" href="/static/stylesheets/codemirror.css">
    <link rel="stylesheet" href="/static/css/main.css">
    <link rel="stylesheet" href="/static/stylesheets/monokai.css">
</head>

<body class="dashboard">


    <nav class="center">
        <div class="left">
            <span class="brand-name"> Dropout </span>
        </div>
        <div class="middle">
            <button class="resource" id="add"> Add Resource </button>
        </div>
        <div class="right center">
            <span class="lecturer-name"> Casprine A. </span>
            <img src="../static/img/logo.png" alt="">
        </div>
    </nav>


    <div class="board">
        <div class="divider">
            <div class="left center">
                <div class="code">

                    <div id="code-editor" style="width:100%; , height:100%; ">
                        <div class="hde" style="display: none">{{ code }}</div>
                    </div>


                    <div class="gist">
                        <div class="heading">
                            Save as Gist
                        </div>
                        <form action="">
                            <input type="text" placeholder="Name">
                            <input type="text" placeholder="Description">
                            <button> Save </button>
                        </form>
                        <div class="gist-link">
                            <a href="https://gist.github.com/Casprine/a92560853016f1bfaea729de3a8149a7">
                                https://gist.github.com/Casprine/a92560853016f1bfaea729de3a8149a7</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="right">

                <div class="heading"> Resources </div>
                <div class="resources">
                    <div class="resources-data">
                        <ul>
                            <li>
                                <span class="name">
                                    Index :
                                </span>
                                <span class="link">
                                    <a href="https://pastebin.com/YVRF08wY">https://pastebin.com/YVRF08wY</a>
                                </span>
                            </li>

                            <li>
                                <span class="name">
                                    Index :
                                </span>
                                <span class="link">
                                    <a href="https://pastebin.com/YVRF08wY">https://pastebin.com/YVRF08wY</a>
                                </span>
                            </li>


                            <li>
                                <span class="name">
                                    Index :
                                </span>
                                <span class="link">
                                    <a href="https://pastebin.com/YVRF08wY">https://pastebin.com/YVRF08wY</a>
                                </span>
                            </li>

                            <li>
                                <span class="name">
                                    Index :
                                </span>
                                <span class="link">
                                    <a href="https://pastebin.com/YVRF08wY">https://pastebin.com/YVRF08wY</a>
                                </span>
                            </li>


                        </ul>
                    </div>
                </div>
                <div class="chat">
                    <div class="chat-messages">
                        <ul class="thread">
                        </ul>
                        <span class="user-name"></span>
                    </div>

                    <div class="chat-footer">
                        <input class="message-box" placeholder="enter your message here ..." value="" />
                        <button id="send-btn">Send Message</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="add-resource" id="modal">

        <div class="card">
            <span id="close" class="close"> x </span>
            <div class="heading"> Add New Resource</div>
            <form class="center">
                <input type="text" placeholder="Name">
                <input type="url" placeholder="Link">
                <button> Add </button>disc
            </form>
        </div>


    </div>





    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous">
        </script>

    <script src="/static/js/index.js"></script>
    <script>
        const thread = document.querySelector('.thread');
        const send = document.querySelector('#send-btn');
        const messageBox = document.querySelector('.message-box');
        const userName = document.querySelector('.user-name');
        const ssid = window.location.href.split("session")[1].split("/")[1]
        let messages = [];

        async function init() {
            const response = await fetch(`/message/get-messages/${ssid}`);
            const msgs = await response.json();
            messages = messages.concat(msgs);

            for (const element of messages) {
                console.log('fdfd', element)
                addNewMessageToThread(element)
            }
            return messages
        }

        (async function () {
            c = await init()
        })()

        if (userName.value == "") {
            value = Math.floor(Math.random() * 999).toString();
            userName.value = `Dropout ${value}`
        }

        function createLi({ sender, text }) {
            let li = document.createElement('li');
            li.setAttribute('class', 'message');
            let content = `<div class="message-box">
            <span class="sender"> {{!-- ${sender} --}} Sender : </span>
            <span class="message">${text}</span>
          </div>`;
            li.innerHTML = content;
            return li
        }

        function addNewMessageToThread({ sender, text }) {
            const message = createLi({ sender, text });
            thread.appendChild(message);
        }

        function sendMessage() {
            // window.location.href.split("session")[1].split("/")[1]
            if (messageBox.value == '') { return }
            socket.emit('message', {
                sender: $('.user-name').val(),
                text: messageBox.value,
                session_id: ssid
            })

            messageBox.value = "";
        }

        messageBox.addEventListener("keyup", function (event) {
            event.preventDefault();
            if (event.keyCode === 13) {
                sendMessage()
            }
        });

        send.addEventListener('click', function (e) {
            sendMessage();

        })


    </script>
    <script src="/static/js/ot.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.39.2/codemirror.js"></script>
    <script src="/static/js/javascript.js"></script>
    <script src="/static/js/ruby.js"></script>
    <script src="/static/js/php.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const EditorClient = ot.EditorClient
        const SocketIOAdapter = ot.SocketIOAdapter
        const CodeMirrorAdapter = ot.CodeMirrorAdapter



        const socket = io('https://dropout-kilm.herokuapp.com');
        const editor = CodeMirror(document.getElementById('code-editor'), {
            lineNumbers: true,
            theme: "monokai",
            mode: 'javascript',
        })

        let code = $('#code-editor').val();
        let client;
        function init(str, revision, clients, serverAdapter) {
            if (!code) {
                editor.setValue(str)
            }
            client = window.client = new EditorClient(
                revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
            )
        }
        const sessionId = window.location.href.split("session")[1].split("/")[1];
        socket.emit('joinSession', { session: sessionId })
        socket.emit('mydoc', { session: 'kooltr' })
        socket.on('doc', (obj) => {
            console.log('heyyyy')
            init(obj.str, obj.revision, obj.clients, new SocketIOAdapter(socket))
        })

        socket.on('message', function (msg) {
            messages.push(msg);
            console.log(msg)
            addNewMessageToThread(msg)
        })

    </script>
    <script>


    </script>

    <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script type="text/babel">

        const Message = ({message}) => {

            return(
                <div className="message">
                    {message.sender}
                </div>
            )

            
        }
        class ChatSection extends React.Component {
            constructor() {
                super()
                this.state = {
                    messages: []
                }
            }
            
            componentDidMount(){
                this.setState({
                    messages: [ {
                        sender: 'claeusdev',
                        message: 'Good app'
                    },
                    {
                        sender: 'casprine',
                        message: 'Good app'
                    }
                    ]
                })
                
            }
            render() {
                const { messages } = this.state
                
                return (
                    <div className="section">
                        {messages.map(message => <Message key={message.sender} message={message}/>
                        )}
                    </div>
                )
            }
        }

        

        ReactDOM.render(<ChatSection />, document.getElementById('chatSection'))
    </script>
</body>

</html>